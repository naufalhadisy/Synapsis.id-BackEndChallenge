---
swagger: "2.0"
info:
  description: "Demo Server"
  version: "1.0.0"
  title: "Synpasis.id backend challenge"
  termsOfService: "http://demo.com/demo"
  contact:
    email: "hadinaufal26@gmail.com"
host: "localhost:8080"
basePath: "/v1"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /checkout:
    get:
      tags:
      - "payment"
      summary: "Get the checkout detail from shopping cart"
      description: "it return the value from price and quantity of items"
      operationId: "payment"
      parameters: []
      responses:
        "200":
          description: "Total Prices"
          schema:
            $ref: "#/definitions/Payment"
        "400":
          description: "Bad Request"
        "404":
          description: "Categories Not Found"
        "500":
          description: "Server Error"
          schema:
            type: "string"
  /cart:
    get:
      tags:
      - "item"
      summary: "Get selected item"
      description: "It returns the item that selected by user"
      operationId: "listItem"
      parameters: []
      responses:
        "200":
          description: "List of Categories"
          schema:
            $ref: "#/definitions/Items"
        "400":
          description: "Bad Request"
        "404":
          description: "Categories Not Found"
        "500":
          description: "Server Error"
          schema:
            type: "string"
  /categories:
    get:
      tags:
      - "product"
      summary: "Get product items for the app"
      description: "It returns a list of nested objects which contains all categories\
        \ of the item"
      operationId: "listCategory"
      parameters: []
      responses:
        "200":
          description: "List of Categories"
          schema:
            $ref: "#/definitions/Categories"
        "400":
          description: "Bad Request"
        "404":
          description: "Categories Not Found"
        "500":
          description: "Server Error"
          schema:
            type: "string"
  /login:
    post:
      tags:
      - "user"
      summary: "Return token from auth user"
      description: "Return token from auth user"
      operationId: "Login"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "login"
        description: "Login Payload"
        required: true
        schema:
          $ref: "#/definitions/LoginInfo"
        x-exportParamName: "Login"
      responses:
        "200":
          description: "Successful login"
          schema:
            $ref: "#/definitions/LoginSuccess"
        "400":
          description: "Bad Request"
        "404":
          description: "User not found"
          schema:
            type: "string"
        "500":
          description: "Server error"
          schema:
            type: "string"
definitions:
  Payment:
    type: "object"
    properties:
      totalItem:
        type: "integer"
      totalPrice:
        type: "number"
    example:
      totalItem: 0
      totalPrice: 6.02745618307040320615897144307382404804229736328125
  Items:
    type: "object"
    properties:
      itmId:
        type: "integer"
      itmName:
        type: "string"
      itmPrice:
        type: "number"
      itemQuantity:
        type: "integer"
      itmImage:
        type: "string"
    example:
      itmId: 0
      itemQuantity: 1
      itmName: "itmName"
      itmPrice: 6.02745618307040320615897144307382404804229736328125
      itmImage: "itmImage"
  Categories:
    type: "array"
    items:
      $ref: "#/definitions/Category"
  Category:
    type: "object"
    properties:
      prId:
        type: "integer"
      prName:
        type: "string"
      prPrice:
        type: "number"
      prImageUrl:
        type: "string"
      prIsActive:
        type: "boolean"
      subCategories:
        type: "array"
        items:
          $ref: "#/definitions/SubCategory"
  SubCategory:
    type: "object"
    properties:
      prScId:
        type: "integer"
      prScName:
        type: "string"
      psScPrice:
        type: "number"
      prScImageUrl:
        type: "string"
      prScIsActive:
        type: "boolean"
  LoginInfo:
    type: "object"
    required:
    - "email"
    - "password"
    properties:
      email:
        type: "string"
      password:
        type: "string"
    example:
      password: "password"
      email: "email"
  LoginSuccess:
    type: "object"
    properties:
      success:
        type: "boolean"
      token:
        type: "string"
    example:
      success: true
      token: "token"
